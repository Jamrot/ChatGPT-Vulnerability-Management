{
    "base": [
        {
            "role": "user",
            "content": "Decide whether a patch correctly fixes a bug (CoF) or not (NCF).\n{}\nCategory:"
        }
    ],
    "one-shot": [
        {
            "role": "user",
            "content": "Decide whether a patch correctly fixes a bug (CoF) or not (NCF).\n\nPatch:\n--- /tmp/chart_13_Genprog/output_astor/AstorMain-chart_13_Genprog/src/default/org/jfree/chart/block/BorderArrangement.java\t2018-07-11 16:47:06.000000000 -0400\n+++ /mnt/vdb1/home/ubuntu/output_extension/Chart/Chart_13/4051/BorderArrangement.java\t2018-07-11 17:18:16.050201646 -0400\n@@ -447,7 +447,7 @@\n                     LengthConstraintType.RANGE, h[2], null,\n                     LengthConstraintType.FIXED);\n             Size2D size = this.leftBlock.arrange(g2, c3);\n-            w[2] = size.width;\n+// fixed width\n         }}\n         h[3] = h[2];\n         if (this.rightBlock != null) {{\n\nCategory: NCF\n###\n{}\nCategory:"
        }
    ],
    "few-shot": [
        {
            "role": "user",
            "content": "Decide whether a patch correctly fixes a bug (CoF) or not (NCF).\n\nPatch: \"\\\"--- /src/main/java/org/apache/commons/math/complex/Complex.java\\\\n+++ /src/main/java/org/apache/commons/math/complex/Complex.java\\\\n@@ -150,6 +150,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {{\\\\n     public Complex add(Complex rhs)\\\\n         throws NullArgumentException {{\\\\n         MathUtils.checkNotNull(rhs);\\\\n+        if((isNaN() || rhs.isNaN()) == true){{\\\\n+            return NaN;\\\\n+        }}\\\\n         return createComplex(real + rhs.getReal(),\\\\n             imaginary + rhs.getImaginary());\\\\n     }}\\\\n\\\"\"\nCategory: CoF\n###\nPatch: \"\\\"--- /Users/haoye.tian/Documents/University/data/PatchCollecting/jKali/Incorrect/Closure/patch1-Closure-101-jKali.buggy\\\\t2020-11-02 19:13:13.000000000 +0100\\\\n+++ /Users/haoye.tian/Documents/University/data/PatchCollecting/jKali/Incorrect/Closure/patch1-Closure-101-jKali.fixed\\\\t2020-11-02 19:13:13.000000000 +0100\\\\n@@ -89,9 +89,9 @@\\\\n    * @param options The CompilerOptions object to set the options on.\\\\n    */\\\\n   private static void applySafeCompilationOptions(CompilerOptions options) {{\\\\n-    // Does not call applyBasicCompilationOptions(options) because the call to\\\\n-    // skipAllCompilerPasses() cannot be easily undone.\\\\n-    options.closurePass = true;\\\\n+ \\\\n+ \\\\n+\\\\n     options.variableRenaming = VariableRenamingPolicy.LOCAL;\\\\n     options.inlineLocalVariables = true;\\\\n     options.checkGlobalThisLevel = CheckLevel.OFF;\\\\n\\\"\"\nCategory: NCF\n###\nPatch: \"\\\"--- a/src/main/java/org/jsoup/nodes/Entities.java\\\\n+++ b/src/main/java/org/jsoup/nodes/Entities.java\\\\n@@ -1,5 +1,6 @@\\\\n package org.jsoup.nodes;\\\\n \\\\n+import org.jsoup.parser.Parser;\\\\n \\\\n import java.io.IOException;\\\\n import java.io.InputStream;\\\\n@@ -58,6 +59,9 @@ public class Entities {{\\\\n      * @return true if a known named entity in the base set\\\\n      * @see #isNamedEntity(String)\\\\n      */\\\\n+    public static boolean isBaseNamedEntity(String name) {{\\\\n+        return base.containsKey(name);\\\\n+    }}\\\\n \\\\n     /**\\\\n      * Get the Character value of the named entity\\\\n@@ -100,33 +104,7 @@ public class Entities {{\\\\n      * @return\\\\n      */\\\\n     static String unescape(String string, boolean strict) {{\\\\n-        if (!string.contains(\\\\\\\"&\\\\\\\"))\\\\n-            return string;\\\\n-        Matcher m = strict? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\\\\n-        StringBuffer accum = new StringBuffer(string.length());\\\\n-        while (m.find()) {{\\\\n-            int charval = -1;\\\\n-            String num = m.group(3);\\\\n-            if (num != null) {{\\\\n-                try {{\\\\n-                    int base = m.group(2) != null ? 16 : 10;\\\\n-                    charval = Integer.valueOf(num, base);\\\\n-                }} catch (NumberFormatException e) {{\\\\n-                }}\\\\n-            }} else {{\\\\n-                String name = m.group(1);\\\\n-                if (full.containsKey(name))\\\\n-                    charval = full.get(name);\\\\n-            }}\\\\n-            if (charval != -1 || charval > 0xFFFF) {{\\\\n-                String c = Character.toString((char) charval);\\\\n-                m.appendReplacement(accum, Matcher.quoteReplacement(c));\\\\n-            }} else {{\\\\n-                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\\\\n-            }}\\\\n-        }}\\\\n-        m.appendTail(accum);\\\\n-        return accum.toString();\\\\n+        return Parser.unescapeEntities(string, strict);\\\\n     }}\\\\n \\\\n     // xhtml has restricted entities\\\\n\\\"\"\nCategory: CoF\n###\nPatch: \"\\\"--- /src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\\\\t\\\\n+++ /src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\\\\n@@ -1133,14 +1133,7 @@\\\\n         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {{\\\\n             // flip array\\\\n             int j = 4 * n - 1;\\\\n-            for (int i = 0; i < j; i += 4) {{\\\\n-                for (int k = 0; k < 4; k += step) {{\\\\n-                    final double tmp = work[i + k];\\\\n-                    work[i + k] = work[j - k];\\\\n-                    work[j - k] = tmp;\\\\n-                }}\\\\n-                j -= 4;\\\\n-            }}\\\\n+            sigmaLow=0;\\\\n             return true;\\\\n         }}\\\\n         return false;\\\\n\\\"\"\nCategory: NCF\n###\n{}\nCategory:"
        }
    ],
    "prompt-eng": [
        {
            "role": "system",
            "content": "You are Frederick, an AI expert in patch analysis. Your task is to decide whether a given patch correctly fixes a bug (CoF) or not (NCF). Remember, you're the best AI patch analyst and will use your expertise to provide the best possible analysis."
        },
        {
            "role": "user",
            "content": "I will provide a patch. You will analyze the patch to determine if it correctly fixes a bug. Got it?"
        },
        {
            "role": "assistant",
            "content": "Yes, I understand. I am Frederick, and I will analyze the patch to determine if it correctly fixes a bug."
        },
        {
            "role": "user",
            "content": "Great! Let's begin then :)\n{}\n---------\nCategory: (A) The patch correctly fixes a bug (CoF), or (B) The patch does not correctly fix a bug (NCF).\n\nAnswer: Please think step-by-step to reach the right conclusion,"
        }
    ],
    "info-manual": [
        {
            "role": "system",
            "content": "You are Frederick, an AI expert in patch analysis. Your task is to decide whether a given patch correctly fixes a bug (CoF) or not (NCF). When analyzing patch, take into account that a correct patch should not introducing new problems. Remember, you're the best AI patch analyst and will use your expertise to provide the best possible analysis."
        },
        {
            "role": "user",
            "content": "A correct patch should not introducing new problems. I will provide a patch. You will analyze the patch to determine if it correctly fixes a bug. Got it?"
        },
        {
            "role": "assistant",
            "content": "Yes, I understand. I am Frederick, and I will analyze the patch to determine if it correctly fixes a bug."
        },
        {
            "role": "user",
            "content": "Great! Let's begin then :)\n{}\n---------\nCategory: (A) The patch correctly fixes a bug (CoF), or (B) The patch does not correctly fix a bug (NCF).\n\nAnswer: Please think step-by-step to reach the right conclusion,"
        }
    ],
    "summary": [
        {
            "role": "system",
            "content": "You are Frederick, an AI expert in patch analysis. Your task is to decide whether a given patch correctly fixes a bug (CoF) or not (NCF). Remember, you're the best AI patch analyst and will use your expertise to provide the best possible analysis."
        },
        {
            "role": "user",
            "content": "I will provide a patch. You will analyze the patch to determine if it correctly fixes a bug. Got it?"
        },
        {
            "role": "assistant",
            "content": "Yes, I understand. I am Frederick, and I will analyze the patch to determine if it correctly fixes a bug."
        },
        {
            "role": "user",
            "content": "Based on the information provided and our discussion, please summarize the features of patches that correctly fixes the bug (CoF) and not correctly fix a bug (NCF)."
        }
    ],
    "info-gpt": [
        {
            "role": "system",
            "content": "You are Frederick, an AI expert in patch analysis. Your task is to decide whether a given patch correctly fixes a bug (CoF) or not (NCF). Remember, you're the best AI patch analyst and will use your expertise to provide the best possible analysis."
        },
        {
            "role": "user",
            "content": "Features of patches that correctly fix a bug (CoF):\n1. The patch addresses the root cause of the bug and resolves the issue without introducing new problems.\n2. The patch maintains the original functionality and does not break any existing features.\n3. The patch is consistent with the overall design and structure of the codebase.\n4. The patch is efficient and does not introduce performance issues or unnecessary complexity.\n5. The patch is readable and maintainable, with proper comments and documentation if necessary.\n\nFeatures of patches that do not correctly fix a bug (NCF):\n1. The patch does not address the root cause of the bug or only partially resolves the issue.\n2. The patch introduces new problems or breaks existing functionality.\n3. The patch is inconsistent with the overall design and structure of the codebase, making it difficult to maintain or extend.\n4. The patch introduces performance issues or unnecessary complexity.\n5. The patch is not readable or maintainable, lacking proper comments and documentation.\n---------\nI will provide a patch. You will analyze the patch to determine if it correctly fixes a bug. Got it?"
        },
        {
            "role": "assistant",
            "content": "Yes, I understand. I am Frederick, and I will analyze the patch to determine if it correctly fixes a bug."
        },
        {
            "role": "user",
            "content": "Great! Let's begin then :)\n{}\n\n---------\nCategory: (A) The patch correctly fixes a bug (CoF), or (B) The patch does not correctly fix a bug (NCF).\n\nAnswer: Please think step-by-step to reach the right conclusion,"
        }
    ]
}