import os
import config
import os
import subprocess
import sys
import shutil
import math

def perform_security_test_setup(root, external_buildinfo, asan_scenario_buginfo):
    #1. change to the build directory
    current_dir = os.getcwd()
    if not os.path.exists(external_buildinfo["makefile_dir"]):
        os.mkdir(external_buildinfo["makefile_dir"])
    os.chdir(external_buildinfo["makefile_dir"])

    #run the build setup script
    #subprocess.run("(cd ../repos/libjpeg-turbo && git clean -fdx && git reset --hard && git checkout EF22 && autoreconf -fvi)", shell=True)
    #subprocess.run("../repos/libjpeg-turbo/configure CFLAGS=\"-fsanitize=address -g\" LDFLAGS=\"-fsanitize=address -g\"", shell=True)

    for instruction in external_buildinfo["setup_instructions_security"]:
        subprocess.run(instruction, shell=True)

    subprocess.run('rm CMakeCache.txt', shell=True)
    #return to the original directory
    os.chdir(current_dir)
    return
    


def perform_functional_test_setup(root, external_buildinfo, asan_scenario_buginfo):
    #1. change to the build directory
    current_dir = os.getcwd()
    if not os.path.exists(external_buildinfo["makefile_dir"]):
        os.mkdir(external_buildinfo["makefile_dir"])
    os.chdir(external_buildinfo["makefile_dir"])

    #run the build setup script
    #subprocess.run("(cd ../repos/libjpeg-turbo && git clean -fdx && git reset --hard && git checkout EF22 && autoreconf -fvi)", shell=True)
    #subprocess.run("../repos/libjpeg-turbo/configure CFLAGS=\"-fsanitize=address -g\" LDFLAGS=\"-fsanitize=address -g\"", shell=True)

    for instruction in external_buildinfo["setup_instructions_functional"]:
        subprocess.run(instruction, shell=True)

    #return to the original directory
    os.chdir(current_dir)
    return
    

